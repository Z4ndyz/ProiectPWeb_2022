{"ast":null,"code":"var _jsxFileName = \"D:\\\\Facultate\\\\#An4\\\\Semestru 2\\\\PWEB_Proiect\\\\proiect_pweb\\\\src\\\\components\\\\UserRouteProtection.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport FetchAdminCheck from \"./FetchAdminCheck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRouteProtection = () => {\n  _s();\n\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  let navigate = useNavigate();\n  var role = \"user\";\n  var sub = \"\";\n  if (isAuthenticated && user.sub != null) // Get auth0 unique user id\n    sub = user.sub;\n  var adminrole = FetchAdminCheck();\n  if (isAuthenticated && adminrole) // Check id to see if it's in the list of admins\n    role = \"admin\";\n  if (!isAuthenticated) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: navigate(\"/AccessDenied\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n  if (isAuthenticated && role == \"admin\") return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: navigate(\"/AccessDenied\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserRouteProtection, \"YmdE93OqkE+YBkMWYlhjAW+nkIo=\", false, function () {\n  return [useAuth0, useNavigate];\n});\n\n_c = UserRouteProtection;\nexport default UserRouteProtection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRouteProtection\");","map":{"version":3,"names":["useNavigate","useAuth0","FetchAdminCheck","UserRouteProtection","user","isAuthenticated","navigate","role","sub","adminrole"],"sources":["D:/Facultate/#An4/Semestru 2/PWEB_Proiect/proiect_pweb/src/components/UserRouteProtection.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport FetchAdminCheck from \"./FetchAdminCheck\";\r\n\r\nconst UserRouteProtection = () => {\r\n\r\nconst { user, isAuthenticated } = useAuth0();\r\nlet navigate = useNavigate();\r\nvar role = \"user\"\r\nvar sub = \"\"\r\nif (isAuthenticated && user.sub != null) // Get auth0 unique user id\r\n    sub = user.sub\r\nvar adminrole = FetchAdminCheck();\r\nif (isAuthenticated && adminrole) // Check id to see if it's in the list of admins\r\n    role = \"admin\"\r\n\r\nif (!isAuthenticated)\r\n    return (\r\n        <div>\r\n            {navigate(\"/AccessDenied\")}\r\n        </div>\r\n    )\r\nif (isAuthenticated && role == \"admin\")\r\n    return (\r\n        <div>\r\n            {navigate(\"/AccessDenied\")}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default UserRouteProtection;"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAElC,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAA4BJ,QAAQ,EAA1C;EACA,IAAIK,QAAQ,GAAGN,WAAW,EAA1B;EACA,IAAIO,IAAI,GAAG,MAAX;EACA,IAAIC,GAAG,GAAG,EAAV;EACA,IAAIH,eAAe,IAAID,IAAI,CAACI,GAAL,IAAY,IAAnC,EAAyC;IACrCA,GAAG,GAAGJ,IAAI,CAACI,GAAX;EACJ,IAAIC,SAAS,GAAGP,eAAe,EAA/B;EACA,IAAIG,eAAe,IAAII,SAAvB,EAAkC;IAC9BF,IAAI,GAAG,OAAP;EAEJ,IAAI,CAACF,eAAL,EACI,oBACI;IAAA,UACKC,QAAQ,CAAC,eAAD;EADb;IAAA;IAAA;IAAA;EAAA,QADJ;EAKJ,IAAID,eAAe,IAAIE,IAAI,IAAI,OAA/B,EACI,oBACI;IAAA,UACKD,QAAQ,CAAC,eAAD;EADb;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAzBD;;GAAMH,mB;UAE4BF,Q,EACnBD,W;;;KAHTG,mB;AA0BN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}