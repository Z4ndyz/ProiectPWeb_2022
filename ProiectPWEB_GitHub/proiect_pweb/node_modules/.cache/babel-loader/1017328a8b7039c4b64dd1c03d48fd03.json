{"ast":null,"code":"var _jsxFileName = \"D:\\\\Facultate\\\\#An4\\\\Semestru 2\\\\PWEB_Proiect\\\\proiect_pweb\\\\src\\\\components\\\\UserRouteProtection.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport FetchAdminCheck from \"./FetchAdminCheck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRouteProtection = () => {\n  _s();\n\n  const {\n    user,\n    isLoading,\n    isAuthenticated\n  } = useAuth0();\n\n  if (window.$role != \"admin\" || window.$role != \"user\") {\n    adminrole = FetchAdminCheck();\n    if (isAuthenticated && adminrole == true && !isLoading) // Check id to see if it's in the list of admins\n      window.$role = \"admin\";\n    if (isAuthenticated && adminrole == false && !isLoading) window.$role = \"user\";\n  }\n\n  let navigate = useNavigate();\n  if (!isAuthenticated && !isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: navigate(\"/AccessDenied\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n  if (isAuthenticated && window.$role == \"admin\" && !isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: navigate(\"/AccessDenied\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserRouteProtection, \"cjC2etht5QefVqU9A/rLMzTsY1o=\", false, function () {\n  return [useAuth0, useNavigate];\n});\n\n_c = UserRouteProtection;\nexport default UserRouteProtection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRouteProtection\");","map":{"version":3,"names":["useNavigate","useAuth0","FetchAdminCheck","UserRouteProtection","user","isLoading","isAuthenticated","window","$role","adminrole","navigate"],"sources":["D:/Facultate/#An4/Semestru 2/PWEB_Proiect/proiect_pweb/src/components/UserRouteProtection.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport FetchAdminCheck from \"./FetchAdminCheck\";\r\n\r\nconst UserRouteProtection = () => {\r\n\r\nconst { user, isLoading, isAuthenticated } = useAuth0();\r\n\r\nif((window.$role != \"admin\") || (window.$role != \"user\")) {\r\n    adminrole = FetchAdminCheck();\r\n    if (isAuthenticated && adminrole == true && !isLoading) // Check id to see if it's in the list of admins\r\n    window.$role = \"admin\";\r\n    if (isAuthenticated && adminrole == false && !isLoading)\r\n    window.$role = \"user\";\r\n}\r\n\r\nlet navigate = useNavigate();\r\nif (!isAuthenticated && !isLoading)\r\n    return (\r\n        <div>\r\n            {navigate(\"/AccessDenied\")}\r\n        </div>\r\n    )\r\nif (isAuthenticated && window.$role == \"admin\" && !isLoading)\r\n    return (\r\n        <div>\r\n            {navigate(\"/AccessDenied\")}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default UserRouteProtection;"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAElC,MAAM;IAAEC,IAAF;IAAQC,SAAR;IAAmBC;EAAnB,IAAuCL,QAAQ,EAArD;;EAEA,IAAIM,MAAM,CAACC,KAAP,IAAgB,OAAjB,IAA8BD,MAAM,CAACC,KAAP,IAAgB,MAAjD,EAA0D;IACtDC,SAAS,GAAGP,eAAe,EAA3B;IACA,IAAII,eAAe,IAAIG,SAAS,IAAI,IAAhC,IAAwC,CAACJ,SAA7C,EAAwD;MACxDE,MAAM,CAACC,KAAP,GAAe,OAAf;IACA,IAAIF,eAAe,IAAIG,SAAS,IAAI,KAAhC,IAAyC,CAACJ,SAA9C,EACAE,MAAM,CAACC,KAAP,GAAe,MAAf;EACH;;EAED,IAAIE,QAAQ,GAAGV,WAAW,EAA1B;EACA,IAAI,CAACM,eAAD,IAAoB,CAACD,SAAzB,EACI,oBACI;IAAA,UACKK,QAAQ,CAAC,eAAD;EADb;IAAA;IAAA;IAAA;EAAA,QADJ;EAKJ,IAAIJ,eAAe,IAAIC,MAAM,CAACC,KAAP,IAAgB,OAAnC,IAA8C,CAACH,SAAnD,EACI,oBACI;IAAA,UACKK,QAAQ,CAAC,eAAD;EADb;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CA1BD;;GAAMP,mB;UAEuCF,Q,EAU9BD,W;;;KAZTG,mB;AA2BN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}