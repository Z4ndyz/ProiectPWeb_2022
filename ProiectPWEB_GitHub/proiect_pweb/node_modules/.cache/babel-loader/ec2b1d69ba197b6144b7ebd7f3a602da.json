{"ast":null,"code":"var _jsxFileName = \"D:\\\\Facultate\\\\#An4\\\\Semestru 2\\\\PWEB_Proiect\\\\proiect_pweb\\\\src\\\\components\\\\AdminRouteProtection.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport FetchAdminCheck from \"./FetchAdminCheck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminRouteProtection = () => {\n  _s();\n\n  const {\n    user,\n    isLoading,\n    isAuthenticated\n  } = useAuth0();\n  let navigate = useNavigate();\n  var role = \"user\";\n  var sub = \"\";\n  if (isAuthenticated && user.sub != null) // Get auth0 unique user id\n    sub = user.sub;\n  var adminrole = FetchAdminCheck();\n  if (isAuthenticated && adminrole && !isLoading) // Check id to see if it's in the list of admins\n    role = \"admin\";\n  if (!isAuthenticated && !isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: navigate(\"/AccessDenied\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n  if (isAuthenticated && role == \"user\" && !isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: navigate(\"/AccessDenied\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminRouteProtection, \"cjC2etht5QefVqU9A/rLMzTsY1o=\", false, function () {\n  return [useAuth0, useNavigate];\n});\n\n_c = AdminRouteProtection;\nexport default AdminRouteProtection;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRouteProtection\");","map":{"version":3,"names":["useNavigate","useAuth0","FetchAdminCheck","AdminRouteProtection","user","isLoading","isAuthenticated","navigate","role","sub","adminrole"],"sources":["D:/Facultate/#An4/Semestru 2/PWEB_Proiect/proiect_pweb/src/components/AdminRouteProtection.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport FetchAdminCheck from \"./FetchAdminCheck\";\r\n\r\nconst AdminRouteProtection = () => {\r\n\r\nconst { user, isLoading, isAuthenticated } = useAuth0();\r\nlet navigate = useNavigate();\r\nvar role = \"user\"\r\nvar sub = \"\"\r\nif (isAuthenticated && user.sub != null) // Get auth0 unique user id\r\n    sub = user.sub\r\nvar adminrole = FetchAdminCheck();\r\nif (isAuthenticated && adminrole && !isLoading) // Check id to see if it's in the list of admins\r\n    role = \"admin\"\r\n\r\nif (!isAuthenticated && !isLoading)\r\n    return (\r\n        <div>\r\n            {navigate(\"/AccessDenied\")}\r\n        </div>\r\n    )\r\nif (isAuthenticated && role == \"user\" && !isLoading)\r\n    return (\r\n        <div>\r\n            {navigate(\"/AccessDenied\")}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default AdminRouteProtection;"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;EAAA;;EAEnC,MAAM;IAAEC,IAAF;IAAQC,SAAR;IAAmBC;EAAnB,IAAuCL,QAAQ,EAArD;EACA,IAAIM,QAAQ,GAAGP,WAAW,EAA1B;EACA,IAAIQ,IAAI,GAAG,MAAX;EACA,IAAIC,GAAG,GAAG,EAAV;EACA,IAAIH,eAAe,IAAIF,IAAI,CAACK,GAAL,IAAY,IAAnC,EAAyC;IACrCA,GAAG,GAAGL,IAAI,CAACK,GAAX;EACJ,IAAIC,SAAS,GAAGR,eAAe,EAA/B;EACA,IAAII,eAAe,IAAII,SAAnB,IAAgC,CAACL,SAArC,EAAgD;IAC5CG,IAAI,GAAG,OAAP;EAEJ,IAAI,CAACF,eAAD,IAAoB,CAACD,SAAzB,EACI,oBACI;IAAA,UACKE,QAAQ,CAAC,eAAD;EADb;IAAA;IAAA;IAAA;EAAA,QADJ;EAKJ,IAAID,eAAe,IAAIE,IAAI,IAAI,MAA3B,IAAqC,CAACH,SAA1C,EACI,oBACI;IAAA,UACKE,QAAQ,CAAC,eAAD;EADb;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAzBD;;GAAMJ,oB;UAEuCF,Q,EAC9BD,W;;;KAHTG,oB;AA0BN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}