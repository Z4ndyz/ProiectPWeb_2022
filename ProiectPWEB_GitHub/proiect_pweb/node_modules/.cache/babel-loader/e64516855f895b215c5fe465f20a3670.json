{"ast":null,"code":"var _jsxFileName = \"D:\\\\Facultate\\\\#An4\\\\Semestru 2\\\\PWEB_Proiect\\\\proiect_pweb\\\\src\\\\components\\\\FetchAdminCheck.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchAdminCheck = () => {\n  _s();\n\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  var role = \"user\";\n  var sub = \"\";\n  if (isAuthenticated && user.sub != null) // Get auth0 unique user id\n    sub = user.sub;\n  const [admins, setAdmins] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null); // useEffect(() => {\n  //         setTimeout(() => {\n  //             fetch('http://localhost:8000/admins')\n  //           .then(res => {\n  //             if (!res.ok) { // Handle server errors\n  //               throw Error('could not fetch the data for that resource');\n  //             } \n  //             return res.json();\n  //           })\n  //           .then(data => {\n  //             setIsPending(false);\n  //             setAdmins(data);\n  //             setError(null);\n  //           })\n  //           .catch(err => {\n  //             setIsPending(false);\n  //             setError(err.message); // Handle Fetch Errors\n  //           })\n  //         }, 1000);\n  //       }, [])\n\n  if (isAuthenticated && sub == \"google-oauth2|108756263942986646301\") // Check id to see if it's in the list of admins\n    role = \"admin\";\n  return isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User email : \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User unique Auth0 ID : \", sub]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Role : \", role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 28\n  }, this);\n};\n\n_s(FetchAdminCheck, \"5Q+ckxy2Jn18FVURx+YN4NuovhM=\", false, function () {\n  return [useAuth0];\n});\n\n_c = FetchAdminCheck;\nexport default FetchAdminCheck;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchAdminCheck\");","map":{"version":3,"names":["React","useAuth0","useState","FetchAdminCheck","user","isAuthenticated","role","sub","admins","setAdmins","isPending","setIsPending","error","setError","email"],"sources":["D:/Facultate/#An4/Semestru 2/PWEB_Proiect/proiect_pweb/src/components/FetchAdminCheck.js"],"sourcesContent":["import React from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useState } from 'react';\r\n\r\nconst FetchAdminCheck = () => {\r\n    const { user, isAuthenticated } = useAuth0();\r\n    var role = \"user\"\r\n    var sub = \"\"\r\n    if (isAuthenticated && user.sub != null) // Get auth0 unique user id\r\n        sub = user.sub\r\n\r\n    const [admins, setAdmins] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //         setTimeout(() => {\r\n    //             fetch('http://localhost:8000/admins')\r\n    //           .then(res => {\r\n    //             if (!res.ok) { // Handle server errors\r\n    //               throw Error('could not fetch the data for that resource');\r\n    //             } \r\n    //             return res.json();\r\n    //           })\r\n    //           .then(data => {\r\n    //             setIsPending(false);\r\n    //             setAdmins(data);\r\n    //             setError(null);\r\n    //           })\r\n    //           .catch(err => {\r\n    //             setIsPending(false);\r\n    //             setError(err.message); // Handle Fetch Errors\r\n    //           })\r\n    //         }, 1000);\r\n    //       }, [])\r\n\r\n    if (isAuthenticated && sub == \"google-oauth2|108756263942986646301\") // Check id to see if it's in the list of admins\r\n        role = \"admin\"\r\n\r\n    return (\r\n        isAuthenticated && <div>\r\n            <p>User email : {user.email}</p>\r\n            <p>User unique Auth0 ID : {sub}</p>\r\n            <p>User Role : {role}</p>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default FetchAdminCheck;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAC1B,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAA4BJ,QAAQ,EAA1C;EACA,IAAIK,IAAI,GAAG,MAAX;EACA,IAAIC,GAAG,GAAG,EAAV;EACA,IAAIF,eAAe,IAAID,IAAI,CAACG,GAAL,IAAY,IAAnC,EAAyC;IACrCA,GAAG,GAAGH,IAAI,CAACG,GAAX;EAEJ,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC,CAT0B,CAW1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIG,eAAe,IAAIE,GAAG,IAAI,qCAA9B,EAAqE;IACjED,IAAI,GAAG,OAAP;EAEJ,OACID,eAAe,iBAAI;IAAA,wBACf;MAAA,4BAAiBD,IAAI,CAACU,KAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,QADe,eAEf;MAAA,sCAA2BP,GAA3B;IAAA;MAAA;MAAA;MAAA;IAAA,QAFe,eAGf;MAAA,2BAAgBD,IAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHe;EAAA;IAAA;IAAA;IAAA;EAAA,QADvB;AAOH,CA1CD;;GAAMH,e;UACgCF,Q;;;KADhCE,e;AA4CN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}